name: Automated Changelog Generation

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  changelog:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for git operations
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'Commit_Msg_ChangeLog/package.json'

    - name: Install dependencies
      run: |
        cd Commit_Msg_ChangeLog
        npm ci

    - name: Check if version section exists
      id: check-version
      run: |
        cd Commit_Msg_ChangeLog
        if npm run changelog:check; then
          echo "version_exists=true" >> $GITHUB_OUTPUT
        else
          echo "version_exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Analyze commits and suggest version
      id: analyze
      run: |
        cd Commit_Msg_ChangeLog
        npm run changelog:version analyze

    - name: Generate changelog
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      run: |
        cd Commit_Msg_ChangeLog
        npm run changelog

    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet HEAD -- Commit_Msg_ChangeLog/CHANGELOG.md; then
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "changed=true" >> $GITHUB_OUTPUT
        fi

    - name: Commit and push changes
      if: steps.changes.outputs.changed == 'true' && github.event_name == 'push'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add Commit_Msg_ChangeLog/CHANGELOG.md
        git commit -m "[Docs] Update changelog for version $(cd Commit_Msg_ChangeLog && node -p 'require("./package.json").version')"
        git push

    - name: Create PR comment with changelog preview
      if: github.event_name == 'pull_request' && steps.changes.outputs.changed == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Read the updated changelog
          const changelogPath = path.join('Commit_Msg_ChangeLog', 'CHANGELOG.md');
          const changelog = fs.readFileSync(changelogPath, 'utf8');
          
          // Extract the latest version section
          const lines = changelog.split('\n');
          const versionIndex = lines.findIndex(line => line.match(/^## (?:SDK Version: )?__?[\d.]+__?/));
          
          if (versionIndex !== -1) {
            let endIndex = lines.findIndex((line, index) => 
              index > versionIndex && line.startsWith('## ')
            );
            if (endIndex === -1) endIndex = lines.length;
            
            const versionSection = lines.slice(versionIndex, endIndex).join('\n');
            
            const comment = `## üìù Changelog Preview
          
          This PR will update the changelog with the following changes:
          
          ${versionSection}
          
          ---
          *This comment was automatically generated by the changelog workflow.*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }

  # Optional: Version bump job that can be triggered manually
  version-bump:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'Commit_Msg_ChangeLog/package.json'

    - name: Install dependencies
      run: |
        cd Commit_Msg_ChangeLog
        npm ci

    - name: Analyze and suggest version bump
      id: analyze
      run: |
        cd Commit_Msg_ChangeLog
        ANALYSIS=$(npm run changelog:version analyze)
        echo "$ANALYSIS"

    - name: Create version bump PR
      if: steps.analyze.outputs.suggested_version != steps.analyze.outputs.current_version
      uses: actions/github-script@v7
      with:
        script: |
          // This would create a PR with version bump
          // Implementation depends on your specific workflow needs